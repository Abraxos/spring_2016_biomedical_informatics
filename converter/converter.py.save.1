import psycopg2
import hyperdex.admin
import hyperdex.client

# Initialize hyperdex admin
a = hyperdex.admin.Admin('127.0.0.1', 1984)
c = hyperdex.client.Client('127.0.0.1', 1984)
# Connect
try:
	conn=psycopg2.connect("dbname='fhir' user='fhir' password='fhir'")
except:
	print "I am unable to connect to the database."

def convert(table):
	# Execute Query
	cur = conn.cursor()
	try:
		query = "SELECT * from " + table
		cur.execute(query)
	except:	
		print "I can't SELECT from " + table

	# Output entries to  rows
	rows = cur.fetchall()

	# Output column names
	colnames = [desc[0] for desc in cur.description]
	print(colnames)
	print(rows[0])
	# Establish hyperdex space
	if(table == "resource_compartment"):
		a.rm_space(table)
		s = 'space '+table+' '+\
		'key '+colnames[0] +' '+\
		'attributes '+colnames[0]+', '+colnames[2]+' '+\
		+coln
		'subspace '+colnames[0]+' '+\
		'create 8 partitions tolerate 2 failures'
		a.add_space(s)
		for row in rows:
			c.put(table,row[1], {colnames[0]:row[0], colnames[2]:row[2]})
	elif(table == "resource_index_term"):
		print("_")		
	elif(table == "resource_version"):
		print("_")
	elif(table == "launch_context"):
		print("_")
	elif(table == "launch_context_params"):
		print("_")
	else:
		print("no conversion of this table")

#convert("resource_compartment")
convert("resource_index_term")
#convert("resource_version")
#convert("launch_context")
#convert("launch_context_params")
